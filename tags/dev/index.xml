<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dev on Enconn</title>
    <link>https://enconn.fr/tags/dev/</link>
    <description>Recent content in dev on Enconn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>contact@enconn.fr (Sébastien Blin)</managingEditor>
    <webMaster>contact@enconn.fr (Sébastien Blin)</webMaster>
    <lastBuildDate>Sat, 19 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://enconn.fr/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Jami posts</title>
      <link>https://enconn.fr/blog/jami-post/</link>
      <pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate>
      <author>contact@enconn.fr (Sébastien Blin)</author>
      <guid>https://enconn.fr/blog/jami-post/</guid>
      <description>I&amp;rsquo;m a Core Developer for https://jami.net since several years now. During those years, I gave some talks and wrote a lot of articles that I&amp;rsquo;ll link of that page:
Articles  &amp;ldquo;Improving the call experience in Jami&amp;rdquo; - 2022, Aug 31 - https://jami.net/improving-call-experience-in-jami/ &amp;ldquo;Swarm file transfers&amp;rdquo; - 2022, Aug 09 - https://jami.net/swarm-file-transfers/ &amp;ldquo;Synchronizing conversation history with Swarm&amp;rdquo; - 2022, Feb 16 - https://jami.net/synchronizing-conversation-history-with-swarm/ &amp;ldquo;Swarm: a new generation of group conversations&amp;rdquo; - 2021, Jan 15 - https://jami.</description>
    </item>
    
    <item>
      <title>A GPT-3 bot to answer my tickets</title>
      <link>https://enconn.fr/blog/gpt3-gitlab-bot/</link>
      <pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate>
      <author>contact@enconn.fr (Sébastien Blin)</author>
      <guid>https://enconn.fr/blog/gpt3-gitlab-bot/</guid>
      <description>Long time no see! I have a looooooot of projects in mind and a lot far too big (+40h of work &amp;amp; personal community stuff &amp;amp; life). However, I got a list of projects I can do in one week-end(ish) (e.g. a Gartic Phone with DALL-E, play with open push, etc) and because I answer to a lot of tickets every-day, I was wondering how this can be automatized nowadays with all the new AI projects (for the fun, to be honest, I think a good FAQ should answer to all common questions and a good documentation should complete this.</description>
    </item>
    
    <item>
      <title>Git dissect</title>
      <link>https://enconn.fr/blog/git-dissect/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      <author>contact@enconn.fr (Sébastien Blin)</author>
      <guid>https://enconn.fr/blog/git-dissect/</guid>
      <description>It&amp;rsquo;s been a long time since my previous post, but let&amp;rsquo;s continue this serie about distributed systems with a tool that a lot of people use every day: git.
Git is a versioning tool. Unlike some systems like subversion, you don&amp;rsquo;t need to have a server to use git. Every member of the project own a (partial or not) copy of the project and can directly send data to another member.</description>
    </item>
    
    <item>
      <title>P2P internals - episode 3</title>
      <link>https://enconn.fr/blog/p2p-internals-dht/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      <author>contact@enconn.fr (Sébastien Blin)</author>
      <guid>https://enconn.fr/blog/p2p-internals-dht/</guid>
      <description>In the previous articles we talked about how to create a peer to peer connection and what issues we can encounter. These problems are generally due to the NAT which needs methods to pass through it (e.g. TURN servers) or some new protocols (like ICE).
It is now time to talk about distributed applications and structures created on top of a p2p network.
For a lot of distributed applications, all the nodes in the system can&amp;rsquo;t be stable.</description>
    </item>
    
    <item>
      <title>P2P internals - episode 2</title>
      <link>https://enconn.fr/blog/p2p-internals-ice/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      <author>contact@enconn.fr (Sébastien Blin)</author>
      <guid>https://enconn.fr/blog/p2p-internals-ice/</guid>
      <description>In the first article of this series, we saw how to make an application (DEL) which is able to transfer a file from one peer to one another by successfully bypassing the NAT thanks to a TURN server. However, this technique is not really effective, because, in a lot of cases, a TURN server is completely useless. Indeed, if both peers are on the same network or both peers has an IPv6 address, the TURN server is not mandatory.</description>
    </item>
    
    <item>
      <title>P2P internals - episode 1</title>
      <link>https://enconn.fr/blog/p2p-internals-rfc6062/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      <author>contact@enconn.fr (Sébastien Blin)</author>
      <guid>https://enconn.fr/blog/p2p-internals-rfc6062/</guid>
      <description>I love distributed systems for a various of reasons. But these systems are complex and require interactions with many layers. Even if a lot of distributed systems and software exists, such systems can be difficult to use for several reasons. Today, our operating systems tend to avoid doing as many calculations as possible (i.e. mobile devices need to save battery and avoid data consumption). Also, IPv4 is still massively used so NATs are still needed, interfaces are mainly created to interact with servers, etc.</description>
    </item>
    
  </channel>
</rss>
