<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Js on Enconn</title>
    <link>https://enconn.fr/tags/js/</link>
    <description>Recent content in Js on Enconn</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>contact@enconn.fr (Sébastien Blin)</managingEditor>
    <webMaster>contact@enconn.fr (Sébastien Blin)</webMaster>
    <lastBuildDate>Sat, 11 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://enconn.fr/tags/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ZMarkdown</title>
      <link>https://enconn.fr/dev/zmarkdown/</link>
      <pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate>
      <author>contact@enconn.fr (Sébastien Blin)</author>
      <guid>https://enconn.fr/dev/zmarkdown/</guid>
      <description>Description ZMarkdown is the markdown engine used by Zeste de Savoir. It translates Markdown input to an AST, then the AST to LaTeX or HTML. So, we can render markdown in a web page or generate PDF from our tutorials. This project is based on Remark and created in NodeJs.
Why? Similar projects like Pandoc don&amp;rsquo;t use AST to translate Markdown and they are difficult to improve with modules. Because Remark is extremely modulable and uses an AST, it&amp;rsquo;s the best solution to craft a markdown engine to translate a custom markdown into any format (HTML, slides, PDF, generate Table Of Contents, generate man pages, etc).</description>
    </item>
    
  </channel>
</rss>